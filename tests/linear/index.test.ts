import Linear from "../../src/linear";
const nile = [
  1120, 1160, 963, 1210, 1160, 1160, 813, 1230, 1370, 1140, 995, 935, 1110, 994,
  1020, 960, 1180, 799, 958, 1140, 1100, 1210, 1150, 1250, 1260, 1220, 1030,
  1100, 774, 840, 874, 694, 940, 833, 701, 916, 692, 1020, 1050, 969, 831, 726,
  456, 824, 702, 1120, 1100, 832, 764, 821, 768, 845, 864, 862, 698, 845, 744,
  796, 1040, 759, 781, 865, 845, 944, 984, 897, 822, 1010, 771, 676, 649, 846,
  812, 742, 801, 1040, 860, 874, 848, 890, 744, 749, 838, 1050, 918, 986, 797,
  923, 975, 815, 1020, 906, 901, 1170, 912, 746, 919, 718, 714, 740,
];

describe("Linear State", function () {
  let kf: Linear;
  beforeEach(function () {
    kf = new Linear({
      F: 1,
      G: 1,
      H: 1,
      Q: 1000,
      R: 10000,
      init: {
        cov: [[1000]],
      },
      y: nile,
    });
  });

  it("x of all.", function () {
    expect(kf.x()).toStrictEqual([
      [186.66666666666666],
      [391.57894736842104],
      [526.9759036144578],
      [699.1168519074797],
      [819.1170654757938],
      [909.4189835192205],
      [883.64148517279],
      [976.6933689737864],
      [1082.633312546917],
      [1098.1068470855216],
      [1070.2752904263627],
      [1033.74618545987],
      [1054.341715873001],
      [1038.0420967773184],
      [1033.1682419962306],
      [1013.402099222249],
      [1058.4086930678484],
      [988.3285397896957],
      [980.1351409941954],
      [1023.323500415866],
      [1044.038101070856],
      [1088.8737020924425],
      [1105.387343939833],
      [1144.4553421645992],
      [1175.6704453437383],
      [1187.646349109949],
      [1145.0572101224882],
      [1132.8847251471875],
      [1035.9297882739806],
      [982.9981391634875],
      [953.5516148697112],
      [883.4321339174965],
      [898.7142943196843],
      [880.9611695080861],
      [832.3435416809152],
      [854.9438535562425],
      [810.9235593345783],
      [867.4068585344015],
      [916.7355299455818],
      [930.8551011908238],
      [903.8786253171924],
      [855.8236097286982],
      [747.8087779077074],
      [768.3923098460159],
      [750.4560149206154],
      [850.2906180495903],
      [917.751158746114],
      [894.5849505356615],
      [859.3066149715025],
      [848.9578449811761],
      [827.0865802597701],
      [831.9260018784573],
      [840.5909917105514],
      [846.3747682899574],
      [806.2904029514099],
      [816.7480410531347],
      [797.0947058611371],
      [796.7989642725786],
      [862.5012348079588],
      [834.5397332882033],
      [820.0756417584441],
      [832.2122362017475],
      [835.6669300277927],
      [864.9337818319098],
      [897.1002602940836],
      [897.0731743528328],
      [876.7916899564922],
      [912.7787423876695],
      [874.4763344202912],
      [820.856719767136],
      [774.4285593701602],
      [793.7640286489138],
      [798.6905895889231],
      [783.3752746568097],
      [788.1367036908041],
      [856.1791377312015],
      [857.2113674078234],
      [861.7469207914306],
      [858.0331047455182],
      [866.6691600727667],
      [833.5293244740319],
      [810.6932023820585],
      [818.0703033848672],
      [880.7275516429507],
      [890.7969350982726],
      [916.5166344706934],
      [884.2284732464431],
      [894.7028420426641],
      [916.3956180604769],
      [889.0029619848746],
      [924.3926255414464],
      [919.4237434987956],
      [914.4464547466662],
      [983.4858324626751],
      [964.1734907620679],
      [905.2325669669749],
      [908.9519245223735],
      [857.3650759438093],
      [818.6341101121394],
      [797.3906168003463],
    ]);
  });

  it("y of all.", function () {
    expect(kf.y()).toStrictEqual([
      [1120],
      [1160],
      [963],
      [1210],
      [1160],
      [1160],
      [813],
      [1230],
      [1370],
      [1140],
      [995],
      [935],
      [1110],
      [994],
      [1020],
      [960],
      [1180],
      [799],
      [958],
      [1140],
      [1100],
      [1210],
      [1150],
      [1250],
      [1260],
      [1220],
      [1030],
      [1100],
      [774],
      [840],
      [874],
      [694],
      [940],
      [833],
      [701],
      [916],
      [692],
      [1020],
      [1050],
      [969],
      [831],
      [726],
      [456],
      [824],
      [702],
      [1120],
      [1100],
      [832],
      [764],
      [821],
      [768],
      [845],
      [864],
      [862],
      [698],
      [845],
      [744],
      [796],
      [1040],
      [759],
      [781],
      [865],
      [845],
      [944],
      [984],
      [897],
      [822],
      [1010],
      [771],
      [676],
      [649],
      [846],
      [812],
      [742],
      [801],
      [1040],
      [860],
      [874],
      [848],
      [890],
      [744],
      [749],
      [838],
      [1050],
      [918],
      [986],
      [797],
      [923],
      [975],
      [815],
      [1020],
      [906],
      [901],
      [1170],
      [912],
      [746],
      [919],
      [718],
      [714],
      [740],
    ]);
  });

  it("cov of all.", function () {
    expect(kf.cov()).toStrictEqual([
      [[1666.6666666666667]],
      [[2105.263157894737]],
      [[2369.4779116465866]],
      [[2520.276359267047]],
      [[2603.701481925837]],
      [[2649.0595127464317]],
      [[2673.487876097755]],
      [[2686.577052896121]],
      [[2693.5712549954414]],
      [[2697.3031258357964]],
      [[2699.292767246976]],
      [[2700.353098585825]],
      [[2700.9180507674523]],
      [[2701.2190256551066]],
      [[2701.3793580882757]],
      [[2701.464765956762]],
      [[2701.5102612631445]],
      [[2701.5344956008535]],
      [[2701.5474046277836]],
      [[2701.554280925644]],
      [[2701.5579437426977]],
      [[2701.559894824329]],
      [[2701.5609341112818]],
      [[2701.5614877104326]],
      [[2701.561782597214]],
      [[2701.561939675143]],
      [[2701.5620233461536]],
      [[2701.5620679153553]],
      [[2701.5620916561193]],
      [[2701.562104302159]],
      [[2701.5621110383495]],
      [[2701.562114626529]],
      [[2701.562116537852]],
      [[2701.56211755596]],
      [[2701.5621180982776]],
      [[2701.562118387155]],
      [[2701.562118541032]],
      [[2701.562118622998]],
      [[2701.5621186666585]],
      [[2701.562118689915]],
      [[2701.5621187023035]],
      [[2701.5621187089023]],
      [[2701.562118712418]],
      [[2701.56211871429]],
      [[2701.5621187152874]],
      [[2701.5621187158185]],
      [[2701.562118716102]],
      [[2701.5621187162524]],
      [[2701.562118716333]],
      [[2701.5621187163756]],
      [[2701.5621187163983]],
      [[2701.5621187164106]],
      [[2701.562118716417]],
      [[2701.5621187164206]],
      [[2701.5621187164224]],
      [[2701.5621187164234]],
      [[2701.562118716424]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
    ]);
  });

  it("x(start, end).", function () {
    expect(kf.x({ start: 3, end: 10 })).toStrictEqual([
      [699.1168519074797],
      [819.1170654757938],
      [909.4189835192205],
      [883.64148517279],
      [976.6933689737864],
      [1082.633312546917],
      [1098.1068470855216],
    ]);
  });

  it("y(start, end).", function () {
    expect(kf.y({ start: 3, end: 10 })).toStrictEqual([
      [1210],
      [1160],
      [1160],
      [813],
      [1230],
      [1370],
      [1140],
    ]);
  });

  it("cov(start, end).", function () {
    expect(kf.cov({ start: 3, end: 10 })).toStrictEqual([
      [[2520.276359267047]],
      [[2603.701481925837]],
      [[2649.0595127464317]],
      [[2673.487876097755]],
      [[2686.577052896121]],
      [[2693.5712549954414]],
      [[2697.3031258357964]],
    ]);
  });

  it("x(estimated).", function () {
    expect(kf.x({ start: 3, end: 10, type: "estimated" })).toStrictEqual([
      [526.9759036144578],
      [699.1168519074797],
      [819.1170654757938],
      [909.4189835192205],
      [883.64148517279],
      [976.6933689737864],
      [1082.633312546917],
    ]);
  });

  it("x(smoothed).", function () {
    expect(kf.x({ start: 3, end: 10, type: "smoothed" })).toStrictEqual([
      [865.3749293368234],
      [931.3431223954985],
      [974.4456276937236],
      [998.9926957613211],
      [1042.1390334050507],
      [1066.4992743892851],
      [1060.5094428124482],
    ]);
  });

  it("cov(estimated).", function () {
    expect(kf.cov({ start: 3, end: 10, type: "estimated" })).toStrictEqual([
      [[3369.4779116465866]],
      [[3520.276359267047]],
      [[3603.701481925837]],
      [[3649.0595127464317]],
      [[3673.487876097755]],
      [[3686.577052896121]],
      [[3693.5712549954414]],
    ]);
  });

  it("cov(smoothed).", function () {
    expect(kf.cov({ start: 3, end: 10, type: "smoothed" })).toStrictEqual([
      [[1499.3895346481272]],
      [[1528.5265429601995]],
      [[1544.0470101426693]],
      [[1552.3143277403478]],
      [[1556.718095968284]],
      [[1559.0638597999323]],
      [[1560.3133824062677]],
    ]);
  });

  it("x(index).", function () {
    expect(kf.x({ start: 50, end: 70, index: 0 })).toStrictEqual([
      827.0865802597701, 831.9260018784573, 840.5909917105514,
      846.3747682899574, 806.2904029514099, 816.7480410531347,
      797.0947058611371, 796.7989642725786, 862.5012348079588,
      834.5397332882033, 820.0756417584441, 832.2122362017475,
      835.6669300277927, 864.9337818319098, 897.1002602940836,
      897.0731743528328, 876.7916899564922, 912.7787423876695,
      874.4763344202912, 820.856719767136,
    ]);
  });

  it("y(index).", function () {
    expect(kf.y({ start: 50, end: 70, index: 0 })).toStrictEqual([
      768, 845, 864, 862, 698, 845, 744, 796, 1040, 759, 781, 865, 845, 944,
      984, 897, 822, 1010, 771, 676,
    ]);
  });

  it("cov(index).", function () {
    expect(kf.cov({ start: 50, end: 70, index: 0 })).toStrictEqual([
      2701.5621187163983, 2701.5621187164106, 2701.562118716417,
      2701.5621187164206, 2701.5621187164224, 2701.5621187164234,
      2701.562118716424, 2701.5621187164243, 2701.5621187164243,
      2701.5621187164243, 2701.5621187164243, 2701.5621187164243,
      2701.5621187164243, 2701.5621187164243, 2701.5621187164243,
      2701.5621187164243, 2701.5621187164243, 2701.5621187164243,
      2701.5621187164243, 2701.5621187164243,
    ]);
  });

  it("predict x.", function () {
    expect(kf.x({ start: 90, end: 110 })).toStrictEqual([
      [924.3926255414464],
      [919.4237434987956],
      [914.4464547466662],
      [983.4858324626751],
      [964.1734907620679],
      [905.2325669669749],
      [908.9519245223735],
      [857.3650759438093],
      [818.6341101121394],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
    ]);
  });

  it("predict y(ignored).", function () {
    expect(kf.y({ start: 90, end: 110 })).toStrictEqual([
      [1020],
      [906],
      [901],
      [1170],
      [912],
      [746],
      [919],
      [718],
      [714],
      [740],
    ]);
  });

  it("predict cov.", function () {
    expect(kf.cov({ start: 90, end: 110 })).toStrictEqual([
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[2701.5621187164243]],
      [[3701.5621187164243]],
      [[4701.562118716424]],
      [[5701.562118716424]],
      [[6701.562118716424]],
      [[7701.562118716424]],
      [[8701.562118716425]],
      [[9701.562118716425]],
      [[10701.562118716425]],
      [[11701.562118716425]],
      [[12701.562118716425]],
    ]);
  });

  it("update", function () {
    expect(kf.x({ start: 95, end: 105, type: "smoothed" })).toStrictEqual([
      [859.3832995000269],
      [842.4119083373716],
      [817.7817080084536],
      [803.1296784803809],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
      [797.3906168003463],
    ]);
    expect(kf.cov({ start: 95, end: 105, type: "smoothed" })).toStrictEqual([
      [[1653.502670997489]],
      [[1734.0107247593487]],
      [[1885.150751929256]],
      [[2168.8901636468736]],
      [[2701.5621187164243]],
      [[3701.5621187164243]],
      [[4701.562118716424]],
      [[5701.562118716424]],
      [[6701.562118716424]],
      [[7701.562118716424]],
    ]);
    expect(kf.y({ start: 95, end: 105 })).toStrictEqual([
      [746],
      [919],
      [718],
      [714],
      [740],
    ]);
    kf.update(680);
    expect(kf.x({ start: 95, end: 105, type: "smoothed" })).toStrictEqual([
      [852.8158321485353],
      [833.4134521494612],
      [805.4524173653333],
      [786.2366243177387],
      [774.244493701918],
      [765.6768124562891],
      [765.6768124562891],
      [765.6768124562891],
      [765.6768124562891],
      [765.6768124562891],
    ]);
    expect(kf.cov({ start: 95, end: 105, type: "smoothed" })).toStrictEqual([
      [[1610.6182886013148]],
      [[1653.502670997489]],
      [[1734.0107247593487]],
      [[1885.150751929256]],
      [[2168.8901636468736]],
      [[2701.5621187164243]],
      [[3701.5621187164243]],
      [[4701.562118716424]],
      [[5701.562118716424]],
      [[6701.562118716424]],
    ]);
    expect(kf.y({ start: 95, end: 105 })).toStrictEqual([
      [746],
      [919],
      [718],
      [714],
      [740],
      [680],
    ]);
  });

  it("predict cov.", function () {
    expect(kf.likelihood()).toBe(-681.9908694257784);
  });
});
